{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAA0BC,GACxBA,EAAIC,iBAEJ,IAA8BC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACnBF,EAAQG,OAAOH,EAAMI,OACrBH,EAAOE,OAAOF,EAAKG,OACnBF,EAASC,OAAOD,EAAOE,OAEvB,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCvB,EAAcuB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBJ,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9DgB,GAASC,EAGXN,EAAIG,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(evt) {\n  evt.preventDefault();\n\n  let { delay, step, amount } = evt.currentTarget.elements;\n  delay = Number(delay.value);\n  step = Number(step.value);\n  amount = Number(amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  evt.currentTarget.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","Number","value","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.238cb034.js.map"}